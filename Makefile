#############################################################################
# Makefile for building: game_lizhifan
# Generated by qmake (2.01a) (Qt 4.8.1) on: Tue May 7 20:41:50 2013
# Project:  game_lizhifan.pro
# Template: app
# Command: /usr/bin/qmake -o Makefile game_lizhifan.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = airplane.cpp \
		apple.cpp \
		background.cpp \
		balloon.cpp \
		bird.cpp \
		building.cpp \
		graphicwindow.cpp \
		hotair.cpp \
		jet.cpp \
		mainwindow.cpp \
		pig.cpp \
		qtpuzzle.cpp \
		thing.cpp moc_airplane.cpp \
		moc_apple.cpp \
		moc_background.cpp \
		moc_balloon.cpp \
		moc_bird.cpp \
		moc_building.cpp \
		moc_graphicwindow.cpp \
		moc_hotair.cpp \
		moc_jet.cpp \
		moc_mainwindow.cpp \
		moc_pig.cpp
OBJECTS       = airplane.o \
		apple.o \
		background.o \
		balloon.o \
		bird.o \
		building.o \
		graphicwindow.o \
		hotair.o \
		jet.o \
		mainwindow.o \
		pig.o \
		qtpuzzle.o \
		thing.o \
		moc_airplane.o \
		moc_apple.o \
		moc_background.o \
		moc_balloon.o \
		moc_bird.o \
		moc_building.o \
		moc_graphicwindow.o \
		moc_hotair.o \
		moc_jet.o \
		moc_mainwindow.o \
		moc_pig.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		game_lizhifan.pro
QMAKE_TARGET  = game_lizhifan
DESTDIR       = 
TARGET        = game_lizhifan

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: game_lizhifan.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtGui.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile game_lizhifan.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtGui.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile game_lizhifan.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/game_lizhifan1.0.0 || $(MKDIR) .tmp/game_lizhifan1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/game_lizhifan1.0.0/ && $(COPY_FILE) --parents airplane.h apple.h background.h balloon.h bird.h building.h graphicwindow.h hotair.h jet.h mainwindow.h pig.h thing.h .tmp/game_lizhifan1.0.0/ && $(COPY_FILE) --parents airplane.cpp apple.cpp background.cpp balloon.cpp bird.cpp building.cpp graphicwindow.cpp hotair.cpp jet.cpp mainwindow.cpp pig.cpp qtpuzzle.cpp thing.cpp .tmp/game_lizhifan1.0.0/ && (cd `dirname .tmp/game_lizhifan1.0.0` && $(TAR) game_lizhifan1.0.0.tar game_lizhifan1.0.0 && $(COMPRESS) game_lizhifan1.0.0.tar) && $(MOVE) `dirname .tmp/game_lizhifan1.0.0`/game_lizhifan1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/game_lizhifan1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_airplane.cpp moc_apple.cpp moc_background.cpp moc_balloon.cpp moc_bird.cpp moc_building.cpp moc_graphicwindow.cpp moc_hotair.cpp moc_jet.cpp moc_mainwindow.cpp moc_pig.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_airplane.cpp moc_apple.cpp moc_background.cpp moc_balloon.cpp moc_bird.cpp moc_building.cpp moc_graphicwindow.cpp moc_hotair.cpp moc_jet.cpp moc_mainwindow.cpp moc_pig.cpp
moc_airplane.cpp: thing.h \
		airplane.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) airplane.h -o moc_airplane.cpp

moc_apple.cpp: thing.h \
		apple.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) apple.h -o moc_apple.cpp

moc_background.cpp: background.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) background.h -o moc_background.cpp

moc_balloon.cpp: thing.h \
		balloon.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) balloon.h -o moc_balloon.cpp

moc_bird.cpp: thing.h \
		pig.h \
		bird.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) bird.h -o moc_bird.cpp

moc_building.cpp: thing.h \
		building.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) building.h -o moc_building.cpp

moc_graphicwindow.cpp: background.h \
		thing.h \
		graphicwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) graphicwindow.h -o moc_graphicwindow.cpp

moc_hotair.cpp: thing.h \
		hotair.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) hotair.h -o moc_hotair.cpp

moc_jet.cpp: thing.h \
		pig.h \
		jet.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) jet.h -o moc_jet.cpp

moc_mainwindow.cpp: graphicwindow.h \
		background.h \
		thing.h \
		mainwindow.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_pig.cpp: thing.h \
		pig.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) pig.h -o moc_pig.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

airplane.o: airplane.cpp airplane.h \
		thing.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o airplane.o airplane.cpp

apple.o: apple.cpp apple.h \
		thing.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o apple.o apple.cpp

background.o: background.cpp background.h \
		graphicwindow.h \
		thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o background.o background.cpp

balloon.o: balloon.cpp balloon.h \
		thing.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o balloon.o balloon.cpp

bird.o: bird.cpp bird.h \
		thing.h \
		pig.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o bird.o bird.cpp

building.o: building.cpp building.h \
		thing.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o building.o building.cpp

graphicwindow.o: graphicwindow.cpp graphicwindow.h \
		background.h \
		thing.h \
		bird.h \
		pig.h \
		building.h \
		jet.h \
		airplane.h \
		apple.h \
		hotair.h \
		balloon.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o graphicwindow.o graphicwindow.cpp

hotair.o: hotair.cpp hotair.h \
		thing.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hotair.o hotair.cpp

jet.o: jet.cpp jet.h \
		thing.h \
		pig.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jet.o jet.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		graphicwindow.h \
		background.h \
		thing.h \
		pig.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

pig.o: pig.cpp pig.h \
		thing.h \
		graphicwindow.h \
		background.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pig.o pig.cpp

qtpuzzle.o: qtpuzzle.cpp graphicwindow.h \
		background.h \
		thing.h \
		mainwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qtpuzzle.o qtpuzzle.cpp

thing.o: thing.cpp thing.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o thing.o thing.cpp

moc_airplane.o: moc_airplane.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_airplane.o moc_airplane.cpp

moc_apple.o: moc_apple.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_apple.o moc_apple.cpp

moc_background.o: moc_background.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_background.o moc_background.cpp

moc_balloon.o: moc_balloon.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_balloon.o moc_balloon.cpp

moc_bird.o: moc_bird.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_bird.o moc_bird.cpp

moc_building.o: moc_building.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_building.o moc_building.cpp

moc_graphicwindow.o: moc_graphicwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_graphicwindow.o moc_graphicwindow.cpp

moc_hotair.o: moc_hotair.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_hotair.o moc_hotair.cpp

moc_jet.o: moc_jet.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_jet.o moc_jet.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_pig.o: moc_pig.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pig.o moc_pig.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

